name: BuildDevEnv

on:
  push:
    branches:
      - dev-env

env:
  REGISTRY: ghcr.io
  OWNER: robertosannino
  # GH_PROJECT_NAME: CICD-QA-Sample
  VERSION_MSERVICE_A: 1.0.0
  VERSION_MSERVICE_B: 1.0.0
  VERSION_UI: 1.0.0

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      - uses: actions/setup-node@v2
        with:
          node-version: '16.13.0'

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache local node modules
        uses: actions/cache@v2
        with:
          path: ui/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache local node packages
        uses: actions/cache@v2
        with:
          path: ~/npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: build mservice_a
        run: ./mvnw clean package verify -DskipTests jib:dockerBuild
        working-directory: mserviceA

      - name: build mservice_b
        run: ./mvnw clean package verify -DskipTests jib:dockerBuild
        working-directory: mserviceB

      - name: install node packages
        run: npm install
        working-directory: ui

      - name: build ui
        run: npm run build
        working-directory: ui

      - name: build ui docker image
        run: docker build -f ../deploy/nginx/ui-dockerfile . -t cicdqa/ui:${{ env.VERSION_UI }}
        working-directory: ui

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag docker images for push
        run: |
          docker image tag cicdqa/mservicea:${{ env.VERSION_MSERVICE_A }}     ${{ env.REGISTRY }}/${{ env.OWNER }}/cicdqa/dev/mservicea:${{ env.VERSION_MSERVICE_A }}
          docker image tag cicdqa/mserviceb:${{ env.VERSION_MSERVICE_B }}     ${{ env.REGISTRY }}/${{ env.OWNER }}/cicdqa/dev/mserviceb:${{ env.VERSION_MSERVICE_B }}
          docker image tag cicdqa/ui:${{ env.VERSION_UI }}                    ${{ env.REGISTRY }}/${{ env.OWNER }}/cicdqa/dev/ui:${{ env.VERSION_UI }}

      - name: Push Docker images
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.OWNER }}/cicdqa/dev/mservicea:${GITHUB_REF##*/}
          docker push ${{ env.REGISTRY }}/${{ env.OWNER }}/cicdqa/dev/mserviceb:${GITHUB_REF##*/}
          docker push ${{ env.REGISTRY }}/${{ env.OWNER }}/cicdqa/dev/ui:${GITHUB_REF##*/}

